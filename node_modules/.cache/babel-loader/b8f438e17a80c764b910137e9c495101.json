{"ast":null,"code":"import { useReducer } from 'react';\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error'\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        jobs: [],\n        loading: true\n      };\n\n    case ACTIONS.GET_DATA:\n      return { ...state,\n        jobs: action,\n        loading: false\n      };\n\n    case ACTIONS.ERROR:\n      return;\n\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchjobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  return {\n    jobs: [],\n    loading: true,\n    error: false\n  };\n}","map":{"version":3,"sources":["/home/ashish/web devlopment/react_pr/src/Fetchjob.js"],"names":["useReducer","ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","reducer","state","action","type","jobs","loading","useFetchjobs","params","page","dispatch","error"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,MAAMC,OAAO,GAAE;AACXC,EAAAA,YAAY,EAAC,cADF;AAEXC,EAAAA,QAAQ,EAAC,UAFE;AAGXC,EAAAA,KAAK,EAAC;AAHK,CAAf;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAAuBC,MAAvB,EAA8B;AAC1B,UAAOA,MAAM,CAACC,IAAd;AACG,SAAKP,OAAO,CAACC,YAAb;AACI,aAAO;AAACO,QAAAA,IAAI,EAAC,EAAN;AAASC,QAAAA,OAAO,EAAC;AAAjB,OAAP;;AACH,SAAKT,OAAO,CAACE,QAAb;AACI,aAAO,EAAC,GAAGG,KAAJ;AAAUG,QAAAA,IAAI,EAACF,MAAf;AAAsBG,QAAAA,OAAO,EAAC;AAA9B,OAAP;;AACJ,SAAKT,OAAO,CAACG,KAAb;AACQ;;AACP;AACG,aAAOE,KAAP;AARR;AAWH;;AACD,eAAiB,SAASK,YAAT,CAAsBC,MAAtB,EAA6BC,IAA7B,EAAkC;AAC/C,QAAM,CAACP,KAAD,EAAOQ,QAAP,IAAmBd,UAAU,CAACK,OAAD,EAAS;AAACI,IAAAA,IAAI,EAAC,EAAN;AAASC,IAAAA,OAAO,EAAC;AAAjB,GAAT,CAAnC;AACA,SAAO;AACHD,IAAAA,IAAI,EAAC,EADF;AAEHC,IAAAA,OAAO,EAAC,IAFL;AAGHK,IAAAA,KAAK,EAAC;AAHH,GAAP;AAKH","sourcesContent":["import {useReducer} from 'react';\nconst ACTIONS ={\n    MAKE_REQUEST:'make-request',\n    GET_DATA:'get-data',\n    ERROR:'error'\n}\nfunction reducer(state,action){\n    switch(action.type){\n       case ACTIONS.MAKE_REQUEST:\n           return {jobs:[],loading:true}\n        case ACTIONS.GET_DATA:\n            return {...state,jobs:action,loading:false,}\n        case ACTIONS.ERROR:\n                return \n         default:\n            return state;             \n    }\n\n}\nexport default   function useFetchjobs(params,page){\n    const [state,dispatch] = useReducer(reducer,{jobs:[],loading:true})\n    return {\n        jobs:[],\n        loading:true,\n        error:false\n    }\n}"]},"metadata":{},"sourceType":"module"}