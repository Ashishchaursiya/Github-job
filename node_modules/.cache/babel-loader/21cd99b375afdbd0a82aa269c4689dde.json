{"ast":null,"code":"var _jsxFileName = \"/home/ashish/web devlopment/react_pr/src/App.jsx\";\nimport React, { useState } from \"react\";\nimport useFetchjob from \"./Fetchjob\";\nimport { Container } from \"react-bootstrap\";\nimport { CircularProgress } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport \"./index.css\";\nimport Job from './job';\nimport JobPagination from \"./Jobpagination\";\n\nconst App = () => {\n  const [params, setparams] = useState({});\n  const [page, setpage] = useState(1);\n  const {\n    jobs,\n    loading,\n    error,\n    hasNextPage\n  } = useFetchjob(params, page);\n\n  function handleParamschange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setpage(1);\n    set;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"bg-light p-2 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \" Github Jobs\"), /*#__PURE__*/React.createElement(JobPagination, {\n    page: page,\n    setpage: setpage,\n    hasNextPage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 34,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  })), error && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AlertTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Error\"), \"This is an error alert \\u2014 \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 34\n    }\n  }, \"Unable to fetch API\")), jobs.map(job => {\n    return /*#__PURE__*/React.createElement(Job, {\n      key: job.id,\n      job: job,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }\n    });\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ashish/web devlopment/react_pr/src/App.jsx"],"names":["React","useState","useFetchjob","Container","CircularProgress","Alert","AlertTitle","Job","JobPagination","App","params","setparams","page","setpage","jobs","loading","error","hasNextPage","handleParamschange","e","param","target","name","value","set","map","job","id"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAASC,gBAAT,QAAgC,mBAAhC;AACD,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGC,MAAMC,GAAG,GAAG,MAAI;AACZ,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,CAAD,CAA/B;AACD,QAAM;AAACa,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA,KAAd;AAAoBC,IAAAA;AAApB,MAAmCf,WAAW,CAACQ,MAAD,EAAQE,IAAR,CAApD;;AACA,WAASM,kBAAT,CAA4BC,CAA5B,EAA8B;AAC1B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAvB;AACA,UAAMC,KAAK,GAAGJ,CAAC,CAACE,MAAF,CAASE,KAAvB;AACAV,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAW,IAAAA,GAAG;AACN;;AACD,sBACI,uDACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEZ,IAArB;AAA2B,IAAA,OAAO,EAAEC,OAApC;AAA6C,IAAA,WAAW,EAAE,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGD;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,OAAO,iBAAK,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,EAAxB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CAHC,EAMCC,KAAK,iBAAI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACV,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADU,iDAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFf,CANV,EAUCF,IAAI,CAACW,GAAL,CAAWC,GAAD,IAAQ;AACf,wBAAO,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAd;AAAkB,MAAA,GAAG,EAAED,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CAVD,CADA,CADJ;AAoBC,CA9BJ;;AAgCA,eAAejB,GAAf","sourcesContent":[" import React,{useState} from \"react\"\n import useFetchjob from \"./Fetchjob\"\n import {Container} from \"react-bootstrap\"\n import { CircularProgress} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle'\nimport \"./index.css\"\nimport Job from './job'\nimport JobPagination from \"./Jobpagination\";\n \n  \n const App = ()=>{\n     const [params,setparams] =useState({})\n     const [page,setpage] = useState(1)\n    const {jobs,loading,error,hasNextPage} = useFetchjob(params,page)\n    function handleParamschange(e){\n        const param = e.target.name\n        const value = e.target.value\n        setpage(1)\n        set\n    }\n    return (\n        <>\n        <Container className=\"my-5\">\n        <h1 className=\"bg-light p-2 mb-4\"> Github Jobs</h1>\n        <JobPagination page={page} setpage={setpage} hasNextPage={true}/>\n       <div className=\"text-center\">\n       {loading &&  <CircularProgress size={34} color=\"primary\" /> }\n       </div>  \n        {error && <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        This is an error alert â€” <strong>Unable to fetch API</strong>\n       </Alert>  }\n        {jobs.map( (job) =>{\n            return <Job key={job.id} job={job}  />\n        })}\n        </Container>\n       \n        </>\n    )\n        \n    }\n    \n export default App;\n "]},"metadata":{},"sourceType":"module"}