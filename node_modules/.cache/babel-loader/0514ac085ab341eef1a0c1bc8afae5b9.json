{"ast":null,"code":"var _jsxFileName = \"/home/ashish/web devlopment/react_pr/src/App.jsx\";\nimport React from \"react\";\nimport fetchjob from \"./Fetchjob\";\nimport { Container } from \"react-bootstrap\";\nimport \"./index.css\";\n\nconst App = () => {\n  const {\n    jobs,\n    loading,\n    error\n  } = fetchjob();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 19\n    }\n  }, \"Try again. \"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \" \", jobs.length)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ashish/web devlopment/react_pr/src/App.jsx"],"names":["React","fetchjob","Container","App","jobs","loading","error","length"],"mappings":";AAAC,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AAEA,OAAO,aAAP;;AAGA,MAAMC,GAAG,GAAG,MAAI;AACb,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA;AAAd,MAAuBL,QAAQ,EAArC;AACA,sBACI,uDACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCI,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADZ,EAECC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFV,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMF,IAAI,CAACG,MAAX,CAHA,CADA,CADJ;AAWC,CAbJ;;AAeA,eAAeJ,GAAf","sourcesContent":[" import React from \"react\"\n import fetchjob from \"./Fetchjob\"\n import {Container} from \"react-bootstrap\"\n \n import \"./index.css\"\n \n  \n const App = ()=>{\n    const {jobs,loading,error} = fetchjob()\n    return (\n        <>\n        <Container>\n        {loading && <h1>Loading...</h1> }\n        {error && <h1>Try again. </h1>  }\n        <h1> {jobs.length}</h1>\n        </Container>\n       \n        </>\n    )\n        \n    }\n    \n export default App;\n "]},"metadata":{},"sourceType":"module"}